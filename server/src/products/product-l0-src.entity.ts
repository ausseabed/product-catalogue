import "reflect-metadata";
import { Entity, PrimaryGeneratedColumn, Column } from "typeorm";
import { Product, VerticalDatum } from './product.entity';
import { ApiHideProperty, ApiProperty } from "@nestjs/swagger";
import { Exclude } from "class-transformer";

@Entity()
export class ProductL0Src implements Product {

  /**
   * The autogenerated id for the product
   *
   * @type {number}
   * @memberof Product
   */
  @ApiProperty({type:'integer'})
  @PrimaryGeneratedColumn()
  id: number;

  /**
   * Unique identifier for reference purposes
   *
   * @type {string}
   * @memberof Product
   */
  @Column()
  uuid: string;

  /**
   * Name of product for display purposes - from gazeteer
   *
   * @type {string}
   * @memberof Product
   */
  @Column()
  name: string;

  /**
   * Spatial Reference of product
   *
   * @type {string}
   * @memberof Product
   */
  @Column()
  srs: string;

  /**
   * Vertical Reference of product
   *
   * @type {string}
   * @memberof Product
   */
  @Column({type: "enum",
        enum: VerticalDatum,
        default: VerticalDatum.Unknown})
  verticalDatum: VerticalDatum;

  /**
   * Persistent Id of the metadata product
   *
   * @type {string}
   * @memberof Product
   */
  @Column()
  metadataPersistentId: string;

  /**
   * Location of folder containing l0 instrument data
   *
   * @type {string}
   * @memberof ProductL0Src
   */
  @Column()
  l0InstrumentLocation: string;

  @ApiHideProperty()
  @Exclude()
  @Column("tstzrange", {
    default: () =>
      "tstzrange(CURRENT_TIMESTAMP, NULL::timestamp with time zone)",
  })
  sysPeriod: any;
}


