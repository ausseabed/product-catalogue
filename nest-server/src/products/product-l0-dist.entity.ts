import "reflect-metadata";
import { Entity, PrimaryGeneratedColumn, Column, OneToMany, ManyToOne, JoinColumn } from "typeorm";
import { Product } from './product.entity';
import { ProductL0InstrumentFile } from "./product-l0-instrument-file.entity";
import { ApiBody } from "@nestjs/swagger";
import { Survey } from "src/surveys/survey.entity";
import { ProductL0Src } from "./product-l0-src.entity";

@Entity()
export class ProductL0Dist implements Product {


  /**
   * The autogenerated id for the product
   *
   * @type {number}
   * @memberof Product
   */
  @PrimaryGeneratedColumn()
  id: number;

  /**
   * Unique identifier for reference purposes
   *
   * @type {string}
   * @memberof Product
   */
  @Column()
  uuid: string;

  /**
   * Name of product for display purposes - from gazeteer
   *
   * @type {string}
   * @memberof Product
   */
  @Column()
  name: string;

  /**
   * Spatial Reference of product
   *
   * @type {string}
   * @memberof Product
   */
  @Column()
  srs: string;

  /**
   * Persistent Id of the metadata product
   *
   * @type {string}
   * @memberof Product
   */
  @Column()
  metadataPersistentId: string;

  /**
   * Reference to the source data for this distribution
   *
   * @type {Survey}
   * @memberof Product
   */
  @ManyToOne(type => ProductL0Src, {
    nullable: false,
    onDelete: 'CASCADE'
  })
  sourceProduct: ProductL0Src;

  /**
   * The files that make up the source of the L0 product
   *
   * @type {ProductL0InstrumentFile[]}
   * @memberof ProductL0Dist
   */
  @OneToMany(type => ProductL0InstrumentFile, instrumentFiles => instrumentFiles.productL0Dist)
  l0InstrumentFiles: ProductL0InstrumentFile[]; // Location of instrument files 

  /**
   * The location of the extent polygon used to describe the coverage
   *
   * @type {string}
   * @memberof ProductL0Dist
   */
  @Column()
  l0CoverageLocation: string; // Location of shapefile 

}


